//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Grammar/Pumlg.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PumlgParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPumlgListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.uml"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUml([NotNull] PumlgParser.UmlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.uml"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUml([NotNull] PumlgParser.UmlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_diagram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_diagram([NotNull] PumlgParser.Class_diagramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_diagram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_diagram([NotNull] PumlgParser.Class_diagramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_declaration([NotNull] PumlgParser.Class_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_declaration([NotNull] PumlgParser.Class_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.hide_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHide_declaration([NotNull] PumlgParser.Hide_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.hide_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHide_declaration([NotNull] PumlgParser.Hide_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] PumlgParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] PumlgParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod([NotNull] PumlgParser.MethodContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod([NotNull] PumlgParser.MethodContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection_left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnection_left([NotNull] PumlgParser.Connection_leftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection_left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnection_left([NotNull] PumlgParser.Connection_leftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection_right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnection_right([NotNull] PumlgParser.Connection_rightContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection_right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnection_right([NotNull] PumlgParser.Connection_rightContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnection([NotNull] PumlgParser.ConnectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnection([NotNull] PumlgParser.ConnectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.multiplicity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicity([NotNull] PumlgParser.MultiplicityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.multiplicity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicity([NotNull] PumlgParser.MultiplicityContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_public</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility_public([NotNull] PumlgParser.Visibility_publicContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_public</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility_public([NotNull] PumlgParser.Visibility_publicContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_private</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility_private([NotNull] PumlgParser.Visibility_privateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_private</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility_private([NotNull] PumlgParser.Visibility_privateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_protected</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility_protected([NotNull] PumlgParser.Visibility_protectedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_protected</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility_protected([NotNull] PumlgParser.Visibility_protectedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.function_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_argument([NotNull] PumlgParser.Function_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.function_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_argument([NotNull] PumlgParser.Function_argumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.function_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_argument_list([NotNull] PumlgParser.Function_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.function_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_argument_list([NotNull] PumlgParser.Function_argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.template_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplate_argument([NotNull] PumlgParser.Template_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.template_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplate_argument([NotNull] PumlgParser.Template_argumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.template_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplate_argument_list([NotNull] PumlgParser.Template_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.template_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplate_argument_list([NotNull] PumlgParser.Template_argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdent([NotNull] PumlgParser.IdentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdent([NotNull] PumlgParser.IdentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifiers([NotNull] PumlgParser.ModifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifiers([NotNull] PumlgParser.ModifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.stereotype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStereotype([NotNull] PumlgParser.StereotypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.stereotype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStereotype([NotNull] PumlgParser.StereotypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>template_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplate_type([NotNull] PumlgParser.Template_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>template_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplate_type([NotNull] PumlgParser.Template_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>list_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_type([NotNull] PumlgParser.List_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>list_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_type([NotNull] PumlgParser.List_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_type([NotNull] PumlgParser.Simple_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_type([NotNull] PumlgParser.Simple_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_type([NotNull] PumlgParser.Class_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_type([NotNull] PumlgParser.Class_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterItem_list([NotNull] PumlgParser.Item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitItem_list([NotNull] PumlgParser.Item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.enum_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_declaration([NotNull] PumlgParser.Enum_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.enum_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_declaration([NotNull] PumlgParser.Enum_declarationContext context);
}
