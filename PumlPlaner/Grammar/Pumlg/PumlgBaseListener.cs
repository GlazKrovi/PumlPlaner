//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Pumlg.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPumlgListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class PumlgBaseListener : IPumlgListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.uml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUml([NotNull] PumlgParser.UmlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.uml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUml([NotNull] PumlgParser.UmlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_diagram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_diagram([NotNull] PumlgParser.Class_diagramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_diagram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_diagram([NotNull] PumlgParser.Class_diagramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_declaration([NotNull] PumlgParser.Class_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_declaration([NotNull] PumlgParser.Class_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.hide_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHide_declaration([NotNull] PumlgParser.Hide_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.hide_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHide_declaration([NotNull] PumlgParser.Hide_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] PumlgParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] PumlgParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] PumlgParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] PumlgParser.MethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection_left"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConnection_left([NotNull] PumlgParser.Connection_leftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection_left"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConnection_left([NotNull] PumlgParser.Connection_leftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection_right"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConnection_right([NotNull] PumlgParser.Connection_rightContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection_right"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConnection_right([NotNull] PumlgParser.Connection_rightContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.connection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConnection([NotNull] PumlgParser.ConnectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.connection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConnection([NotNull] PumlgParser.ConnectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.multiplicity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicity([NotNull] PumlgParser.MultiplicityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.multiplicity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicity([NotNull] PumlgParser.MultiplicityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_public</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility_public([NotNull] PumlgParser.Visibility_publicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_public</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility_public([NotNull] PumlgParser.Visibility_publicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_private</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility_private([NotNull] PumlgParser.Visibility_privateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_private</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility_private([NotNull] PumlgParser.Visibility_privateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>visibility_protected</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility_protected([NotNull] PumlgParser.Visibility_protectedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>visibility_protected</c>
	/// labeled alternative in <see cref="PumlgParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility_protected([NotNull] PumlgParser.Visibility_protectedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument([NotNull] PumlgParser.Function_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument([NotNull] PumlgParser.Function_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument_list([NotNull] PumlgParser.Function_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument_list([NotNull] PumlgParser.Function_argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.template_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_argument([NotNull] PumlgParser.Template_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.template_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_argument([NotNull] PumlgParser.Template_argumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.template_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_argument_list([NotNull] PumlgParser.Template_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.template_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_argument_list([NotNull] PumlgParser.Template_argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdent([NotNull] PumlgParser.IdentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdent([NotNull] PumlgParser.IdentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModifiers([NotNull] PumlgParser.ModifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModifiers([NotNull] PumlgParser.ModifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.stereotype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStereotype([NotNull] PumlgParser.StereotypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.stereotype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStereotype([NotNull] PumlgParser.StereotypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>template_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_type([NotNull] PumlgParser.Template_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>template_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_type([NotNull] PumlgParser.Template_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>list_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_type([NotNull] PumlgParser.List_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>list_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_type([NotNull] PumlgParser.List_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_type([NotNull] PumlgParser.Simple_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_type</c>
	/// labeled alternative in <see cref="PumlgParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_type([NotNull] PumlgParser.Simple_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_type([NotNull] PumlgParser.Class_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_type([NotNull] PumlgParser.Class_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.item_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItem_list([NotNull] PumlgParser.Item_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.item_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItem_list([NotNull] PumlgParser.Item_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PumlgParser.enum_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_declaration([NotNull] PumlgParser.Enum_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PumlgParser.enum_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_declaration([NotNull] PumlgParser.Enum_declarationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
